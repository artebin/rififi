#!/usr/bin/env bash

# This scripts checks if the remmina connection files have changed since the last execution.
# If they have then the script will (re)write the file `rififi-remmina-connections.conf`.
# This last file contains the rofi menu and will be sourced.

REMMINA_FILES_PARENT_DIRECTORY="${HOME}/.local/share/remmina"
REMMINA_CONNECTIONS_DUMP_FILE="./rififi-remmina-connections.dump"
TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE="${REMMINA_CONNECTIONS_DUMP_FILE}.tmp"
REMMINA_CONNECTIONS_CONF_FILE="./rififi-remmina-connections.conf"

should_write_remmina_connections_conf_file(){
	VALUE_VARNAME="${1}"
	if [[ -z "${VALUE_VARNAME}" ]]; then
		printf "ERROR: VALUE_VARNAME should not be empty\n"
		return
	fi
	VALUE="true"
	cat "${REMMINA_FILES_PARENT_DIRECTORY}"/*.remmina > "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}"
	sed -i 's/last_success=.*//g' "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}"
	if [[ -f "${REMMINA_CONNECTIONS_DUMP_FILE}" ]]; then
		if cmp --silent -- "${REMMINA_CONNECTIONS_DUMP_FILE}" "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}"; then
			VALUE="false"
		fi
	fi
	rm -f "${REMMINA_CONNECTIONS_DUMP_FILE}"
	mv "${TEMPORARY_REMMINA_CONNECTIONS_DUMP_FILE}" "${REMMINA_CONNECTIONS_DUMP_FILE}"
	export "${VALUE_VARNAME}"="${VALUE}"
}

key_value_retriever(){
	KEY="${1}"
	if [[ -z "${KEY}" ]]; then
		printf "ERROR: KEY should not be empty\n"
		return
	fi
	FILE="${2}"
	if [[ ! -f "${FILE}" ]]; then
		printf "ERROR: Cannot find FILE: %s\n" "${FILE}"
		return
	fi
	VALUE_VARNAME="${3}"
	if [[ -z "${VALUE_VARNAME}" ]]; then
		printf "ERROR: VALUE_VARNAME should not be empty\n"
		return
	fi
	MATCH=$(grep "^[[:space:]]*${KEY}=" "${FILE}")
	INDEX_OF_FIRST_EQUAL=$(expr index "${MATCH}" =)
	VALUE="${MATCH:${INDEX_OF_FIRST_EQUAL}}"
	export "${VALUE_VARNAME}"="${VALUE}"
}

write_remmina_connections_conf_file(){
	rm -f "${REMMINA_CONNECTIONS_CONF_FILE}"
	
	#MENU_TITLE="Remmina connection"
	printf "MENU_TITLE=\"Remmina connection\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
	
	MENU_ITEM_ID_ALL_ARRAY_AS_STRING=""
	for REMMINA_FILE in "${REMMINA_FILES_PARENT_DIRECTORY}"/*.remmina; do
		key_value_retriever "group" "${REMMINA_FILE}" "REMOTE_GROUP"
		key_value_retriever "name" "${REMMINA_FILE}" "REMOTE_NAME"
		key_value_retriever "protocol" "${REMMINA_FILE}" "REMOTE_PROTOCOL"
		key_value_retriever "server" "${REMMINA_FILE}" "REMOTE_SERVER"
		printf "REMOTE_GROUP[%s] REMOTE_NAME[%s] REMOTE_PROTOCOL[%s] REMOTE_SERVER[%s]\n" "${REMOTE_GROUP}" "${REMOTE_NAME}" "${REMOTE_PROTOCOL}" "${REMOTE_SERVER}" &>2
		
		MENU_ITEM_ID=$(printf "%s_%s_%s_%s" "${REMOTE_GROUP}" "${REMOTE_NAME}" "${REMOTE_PROTOCOL}" "${REMOTE_SERVER}")
		MENU_ITEM_ID=$(echo "${MENU_ITEM_ID}"|sed 's/[^[:alnum:]_]//g')
		MENU_ITEM_ID_ALL_ARRAY_AS_STRING+="${MENU_ITEM_ID} "
		
		#MENU_ITEM_VISIBLE_ARRAY["${MENU_ITEM_ID}"]="true"
		printf "MENU_ITEM_VISIBLE_ARRAY[\"${MENU_ITEM_ID}\"]=\"true\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		
		#MENU_ITEM_REQUEST_CONFIRMATION_ARRAY["${MENU_ITEM_ID}"]="false"
		printf "MENU_ITEM_REQUEST_CONFIRMATION_ARRAY[\"${MENU_ITEM_ID}\"]=\"false\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		
		#MENU_ITEM_TEXT_ARRAY["${MENU_ITEM_ID}"]="${REMOTE_NAME} [${REMOTE_SERVER}]"
		MENU_ITEM_TEXT=$(printf "%20s        %s" "${REMOTE_NAME}" "${REMOTE_SERVER}")
		printf "MENU_ITEM_TEXT_ARRAY[\"${MENU_ITEM_ID}\"]=\"${MENU_ITEM_TEXT}\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		
		#MENU_ITEM_SYMBOL_ARRAY["${MENU_ITEM_ID}"]=""
		printf "MENU_ITEM_SYMBOL_ARRAY[\"${MENU_ITEM_ID}\"]=\"\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
		
		#MENU_ITEM_ACTION_ARRAY["${MENU_ITEM_ID}"]="xdg-open ${REMMINA_FILE}"
		printf "MENU_ITEM_ACTION_ARRAY[\"${MENU_ITEM_ID}\"]=\"xdg-open ${REMMINA_FILE}\"\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
	done
	printf "MENU_ITEM_ID_ALL_ARRAY=( %s)\n" "${MENU_ITEM_ID_ALL_ARRAY_AS_STRING}\n" >> "${REMMINA_CONNECTIONS_CONF_FILE}"
}

if [[ ! -f "${REMMINA_CONNECTIONS_CONF_FILE}" ]]; then
	write_remmina_connections_conf_file
else
	should_write_remmina_connections_conf_file "SHOULD_WRITE_REMMINA_CONNECTIONS_CONF_FILE"
	if ${SHOULD_WRITE_REMMINA_CONNECTIONS_CONF_FILE}; then
		write_remmina_connections_conf_file
	fi
fi

source "${REMMINA_CONNECTIONS_CONF_FILE}"
