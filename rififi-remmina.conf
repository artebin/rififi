#!/usr/bin/env bash

# This script should check the most recent last_modification_timestamp in remmina folder and re-index only if necessary
# We cannot use the last_modification_timestamp because of the key last_success in remmina files (files are rewritten regularly).
# We can just concatenate all files (without the last_success key) in one file and run a diff on the last execution of the script

MENU_TITLE="Remmina connection"

REMMINA_FILES_PARENT_DIRECTORY="${HOME}/.local/share/remmina"

# Retrieve most recent last_modified_timestamp for the files in REMMINA_FILES_PARENT_DIRECTORY


key_value_retriever(){
	KEY="${1}"
	if [[ -z "${KEY}" ]]; then
		printf "ERROR: KEY should not be empty\n"
		return
	fi
	FILE="${2}"
	if [[ ! -f "${FILE}" ]]; then
		printf "ERROR: Cannot find FILE: %s\n" "${FILE}"
		return
	fi
	VALUE_VARNAME="${3}"
	if [[ -z "${VALUE_VARNAME}" ]]; then
		printf "ERROR: VALUE_VARNAME should not be empty\n"
		return
	fi
	MATCH=$(grep "^[[:space:]]*${KEY}=" "${FILE}")
	INDEX_OF_FIRST_EQUAL=$(expr index "${MATCH}" =)
	VALUE="${MATCH:${INDEX_OF_FIRST_EQUAL}}"
	export "${VALUE_VARNAME}"="${VALUE}"
}

for REMMINA_FILE in "${REMMINA_FILES_PARENT_DIRECTORY}"/*; do
	key_value_retriever "group" "${REMMINA_FILE}" "REMOTE_GROUP"
	key_value_retriever "name" "${REMMINA_FILE}" "REMOTE_NAME"
	key_value_retriever "protocol" "${REMMINA_FILE}" "REMOTE_PROTOCOL"
	key_value_retriever "server" "${REMMINA_FILE}" "REMOTE_SERVER"
	
	MENU_ITEM_ID=$(printf "%s_%s_%s_%s" "${REMOTE_GROUP}" "${REMOTE_NAME}" "${REMOTE_PROTOCOL}" "${REMOTE_SERVER}")
	MENU_ITEM_ID=$(echo "${MENU_ITEM_ID}"|sed 's/[^[:alnum:]_]//g')
	
	MENU_ITEM_ID_ALL_ARRAY+=( "${MENU_ITEM_ID}" )
	MENU_ITEM_VISIBLE_ARRAY["${MENU_ITEM_ID}"]="true"
	MENU_ITEM_REQUEST_CONFIRMATION_ARRAY["${MENU_ITEM_ID}"]="false"
	MENU_ITEM_TEXT_ARRAY["${MENU_ITEM_ID}"]="${REMOTE_NAME} [${REMOTE_SERVER}]"
	MENU_ITEM_SYMBOL_ARRAY["${MENU_ITEM_ID}"]=""
	MENU_ITEM_ACTION_ARRAY["${MENU_ITEM_ID}"]="xdg-open ${REMMINA_FILE}"
done
